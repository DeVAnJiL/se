{"version":3,"sources":["NewUI/store/utility.js","NewUI/store/reducers/auth.js","NewUI/store/actions/actionTypes.js","NewUI/store/reducers/teacher.js","NewUI/store/reducers/admin.js","NewUI/store/reducers/student.js","NewUI/store/actions/auth.js","NewUI/pages/Login.js","NewUI/store/uris.js","NewUI/store/actions/admin.js","NewUI/components/Spinner/Spinner.js","NewUI/pages/Admin/AdminMainPage.js","NewUI/pages/Admin/TeacherPage.js","NewUI/pages/Admin/StudentList.js","NewUI/pages/Admin/Admin.js","NewUI/store/actions/teacher.js","NewUI/components/NavBar/Navbars.js","NewUI/pages/Student/StudentList.js","NewUI/pages/Teacher/MarksEntry.js","NewUI/pages/Teacher/StudentList.js","NewUI/components/Slidebar/SidebarUI.js","NewUI/pages/Teacher/TeacherMainPage.js","NewUI/pages/Teacher/Teacher.js","NewUI/store/actions/student.js","NewUI/pages/Student/MarksDisplay.js","NewUI/pages/Student/StudentMainPage.js","NewUI/pages/Student/Student.js","NewUI/components/Slidebar/SidebarTeacher.js","NewUI/components/Slidebar/SidebarAdmin.js","App.js","serviceWorker.js","index.js","NewUI/assests/tu logo official.png"],"names":["updateObject","oldObject","updatedProperties","initialState","token","username","role","error","loading","authRedirectPath","authStart","state","action","authSuccess","console","log","authFail","authLogout","setAuthRedirectPath","path","reducer","type","activeComponent","activeClass","activeSem","activeGroup","activeClassStudentValuesIndex","classes","classStudentValues","setActiveComponent","value","setActiveClass","Class","sem","group","setTeacherClasses","setClassStudentValues","updateClassStudentValues","tempClass","tempClassStudent","data","Type","index","test","practical","classId","fm","resetStates","setActiveClassStudentIndex","activeTeacher","activeTeacherClassesIndex","activeTeacherClassesStudentListIndex","teachers","teacherClasses","teacherClassesStudentList","setTeachers","setTeacherClassesStudentList","tempClasses","tempClassStudents","setActiveTeacher","teacher","setActiveTeacherClassesIndex","setActiveTeacherClassesStudentListIndex","marks","subjects","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Login","event","preventDefault","document","getElementById","password","this","props","onSignIn","errorMessage","authRedirect","isAuthenticated","to","Fragment","Container","fluid","Row","Col","xs","span","sm","offset","md","lg","xl","Form","className","alt","src","LOGO","FormGroup","Label","Input","name","id","placeholder","for","Button","onClick","onSubmitHandler","React","Component","connect","auth","authData","options","method","uri","baseURI","body","json","request","then","expirationDate","Date","getTime","expires","setItem","user","catch","err","message","actions","comp","Spinner","AdminMainPage","selectCard","selectActiveComponent","map","key","Card","inverse","color","onCardSelectHandler","CardText","admin","TeacherPage","i","length","fetch","headers","res","batch","subCode","datas","subName","values","StudentList","classIndex","setActiveStudentIndex","uris","setStudentValues","recordDatas","studentIndex","CardTitle","CardSubtitle","CardBody","Table","responsive","Admin","resetAdminState","onSetTeacher","users","renderComp","Navbars","resetTeacherState","onLogOut","Navbar","NavbarBrand","href","width","height","tuLogo","NavbarText","onLogOutHandler","parseInt","toString","MarksEntry","theNumber","target","asmnt","pract","tempData","submitMarks","tu","onChange","onMarksChangeHandler","colSpan","onMarksSubmitHandler","outline","JSON","stringify","status","alert","TeacherMainPage","Teacher","onSetClass","setCurrentSem","MarksDisplay","code","m1","m2","student","StudentMainPage","setActivePage","page","Student","onFetched","onSetSem","SidebarTeacher","prop","conditionRender","onComponentShiftHandler","UncontrolledTooltip","placement","SidebarAdmin","classOption","teacherOption","App","onTryAutoSignup","routes","Switches","Sidebar","component","LogIn","withRouter","getItem","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","teacherReducer","studentReducer","adminReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.488d0ccb.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    role: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    console.log(\"In auth suc reducer\", action);\r\n    // return updateObject( state, { \r\n    //     token: action.token,\r\n    //     id: action.id,\r\n    //     role: action.role,\r\n    //     error: null,\r\n    //     loading: false\r\n    //  } );\r\n    return {\r\n        ...state,\r\n        token:action.token,\r\n        username:action.username,\r\n        role:action.role\r\n    }\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, username: null, role: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\nexport const SET_TEACHER_ACTIVE_COMPONENT = 'SET_TEACHER_ACTIVE_COMPONENT';\r\nexport const SET_TEACHER_ACTIVE_CLASS = 'SET_TEACHER_ACTIVE_CLASS';\r\nexport const SET_TEACHER_CLASSES = 'SET_TEACHER_CLASSES';\r\nexport const SET_TEACHER_CLASS_STUDENT_VALUES = 'SET_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const UPDATE_TEACHER_CLASS_STUDENT_VALUES = 'UPDATE_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const RESET_DEFAULTS_TEACHER = 'RESET_DEFAULTS_TEACHER';\r\nexport const SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX = 'SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX';\r\n\r\nexport const SET_ADMIN_TEACHERS = 'SET_ADMIN_TEACHERS';\r\nexport const SET_ADMIN_ACTIVE_COMPONENT = 'SET_ADMIN_ACTIVE_COMPONENT';\r\nexport const SET_ADMIN_TEACHER_CLASSES = 'SET_ADMIN_TEACHER_CLASSES';\r\nexport const SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST = 'SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST';\r\nexport const SET_ADMIN_ACTIVE_TEACHER = 'SET_ADMIN_ACTIVE_TEACHER';\r\nexport const SET_ADMIN_ACTIVE_CLASS = 'SET_ADMIN_ACTIVE_CLASS';\r\nexport const RESET_DEFAULTS_ADMIN = 'RESET_DEFAULTS_ADMIN';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX';\r\n\r\nexport const SET_STUDENT_CURRENT_SEM='SET_STUDENT_CURRENT_SEM';\r\nexport const SET_STUDENT_MARKS='SET_STUDENT_MARKS';\r\nexport const SET_ACTIVE_PAGE='SET_ACTIVE_PAGE';\r\nexport const SET_SUBJECTS='SET_SUBJECTS';\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    activeComponent: 'mainPage',\r\n    activeClass: null,\r\n    activeSem: null,\r\n    activeGroup: null,\r\n    activeClassStudentValuesIndex: null,\r\n    classes: [], /*[{batch: 'dfsd', subCode:'adaf', subName:'asdas', group:\"dfsd\"}]*/\r\n    classStudentValues: []\r\n};\r\n\r\nconst setActiveComponent = (state, action) => {\r\n    return updateObject(state, {activeComponent: action.value});\r\n};\r\n\r\nconst setActiveClass = (state, action) => {\r\n    return updateObject(state, {activeClass: action.Class, activeSem: action.sem, activeGroup: action.group, loading: true});\r\n};\r\n\r\nconst setTeacherClasses = (state, action) => {\r\n    return updateObject(state, {classes: action.value, loading: false})\r\n};\r\n\r\nconst setClassStudentValues = (state, action) => {\r\n    return {\r\n        ...state,\r\n        classStudentValues: [...state.classStudentValues, action.value],\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst updateClassStudentValues = (state, action) => {\r\n    let i;\r\n    let tempClass = [...state.classStudentValues];\r\n    /*for (i=0;i<state.classStudentValues.length; i++){\r\n        if ((state.classStudentValues[i].classId === state.activeClass) && (state.classStudentValues[i].sem === state.activeSem)){\r\n            let tempClassStudent = [...tempClass[i].data];\r\n            if (action.Type === 'asmnt'){\r\n                tempClassStudent[action.index].test = action.value;\r\n            } else if(action.Type === 'pract'){\r\n                tempClassStudent[action.index].practical = action.value;\r\n            }\r\n            tempClass[i] = {classId: state.activeClass, sem: state.activeSem, data: tempClassStudent};\r\n            break;\r\n        }\r\n    }*/\r\n    let tempClassStudent = [...tempClass[state.activeClassStudentValuesIndex].data];\r\n    if (action.Type === 'asmnt'){\r\n        tempClassStudent[action.index].test = action.value;\r\n    } else if(action.Type === 'pract'){\r\n        tempClassStudent[action.index].practical = action.value;\r\n    }\r\n    tempClass[state.activeClassStudentValuesIndex] = {classId: state.activeClass, sem: state.activeSem, group: state.activeGroup, data: tempClassStudent, fm: tempClass[state.activeClassStudentValuesIndex].fm};\r\n    return updateObject(state, {classStudentValues: tempClass})\r\n};\r\n\r\nconst resetStates = (state, action) => {\r\n    return updateObject(state, {...initialState})\r\n};\r\n\r\nconst setActiveClassStudentIndex = (state, action) => {\r\n    return updateObject(state, {activeClassStudentValuesIndex: action.value, loading: false})\r\n};\r\n\r\n// const submitMarks = (state, action) => {\r\n//\r\n// };\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.SET_TEACHER_ACTIVE_COMPONENT: return setActiveComponent(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS: return setActiveClass(state, action);\r\n        case actionTypes.SET_TEACHER_CLASSES: return setTeacherClasses(state, action);\r\n        case actionTypes.RESET_DEFAULTS_TEACHER: return resetStates(state, action);\r\n        case actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES: return setClassStudentValues(state, action);\r\n        case actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES: return updateClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX: return setActiveClassStudentIndex(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    activeComponent: 'mainPage',\r\n    activeTeacher: null,\r\n    activeClass: null,\r\n    activeSem: null,\r\n    activeGroup: null,\r\n    activeTeacherClassesIndex: null,\r\n    activeTeacherClassesStudentListIndex: null,\r\n    teachers: [],\r\n    teacherClasses: [],\r\n    teacherClassesStudentList: []\r\n};\r\n\r\nconst setActiveComponent = (state, action) => {\r\n    return updateObject(state, {activeComponent: action.value});\r\n};\r\n\r\nconst setActiveClass = (state, action) => {\r\n    return updateObject(state, {activeClass: action.Class, activeSem: action.sem, activeGroup: action.group, loading: true});\r\n};\r\n\r\nconst setTeachers = (state, action) => {\r\n    return updateObject(state, {teachers: action.value, loading: false})\r\n};\r\n\r\nconst setTeacherClassesStudentList = (state, action) => {\r\n    let tempClasses = [...state.teacherClassesStudentList];\r\n    let tempClassStudents = [...tempClasses[state.activeTeacherClassesIndex]];\r\n    tempClassStudents = [...tempClassStudents, action.value];\r\n    tempClasses[state.activeTeacherClassesIndex] = tempClassStudents;\r\n    return {\r\n        ...state,\r\n        teacherClassesStudentList: tempClasses,\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst setActiveTeacher = (state, action) => {\r\n    return updateObject(state, {activeTeacher: action.teacher, loading: true});\r\n};\r\n\r\nconst setActiveTeacherClassesIndex = (state, action) => {\r\n    return updateObject(state, {activeTeacherClassesIndex: action.value, loading: false})\r\n};\r\n\r\nconst setActiveTeacherClassesStudentListIndex = (state, action) => {\r\n    return updateObject(state, {activeTeacherClassesStudentListIndex: action.value, loading: false})\r\n};\r\n\r\nconst setTeacherClasses = (state, action) => {\r\n    return {\r\n        ...state,\r\n        teacherClasses: [...state.teacherClasses, action.value],\r\n        teacherClassesStudentList: [...state.teacherClassesStudentList, []],\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst resetStates = (state, action) => {\r\n    return updateObject(state, {...initialState})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_ADMIN_TEACHERS: return setTeachers(state, action);\r\n        case actionTypes.SET_ADMIN_TEACHER_CLASSES: return setTeacherClasses(state, action);\r\n        case actionTypes.SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST: return setTeacherClassesStudentList(state, action);\r\n        case actionTypes.SET_ADMIN_ACTIVE_COMPONENT: return setActiveComponent(state, action);\r\n        case actionTypes.SET_ADMIN_ACTIVE_CLASS: return setActiveClass(state, action);\r\n        case actionTypes.RESET_DEFAULTS_ADMIN: return resetStates(state, action);\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER: return setActiveTeacher(state, action);\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX: return setActiveTeacherClassesIndex(state, action);\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX: return setActiveTeacherClassesStudentListIndex(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    activeComponent: 'mainPage',\r\n    activeSem: 's1',\r\n    marks:{},\r\n    subjects:[]\r\n};\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_STUDENT_CURRENT_SEM:\r\n            return{...state,activeSem:action.value}\r\n        case actionTypes.SET_STUDENT_MARKS:\r\n            console.log(\"Reached here\");\r\n            console.log(\"Reducer\",action.value)\r\n            return{...state,marks:action.value}\r\n        case actionTypes.SET_ACTIVE_PAGE:\r\n            console.log(\"setting page reducer\");\r\n            return {...state,activeComponent:action.value}\r\n        case actionTypes.SET_SUBJECTS:\r\n            console.log(\"subject list\");\r\n            return {...state,subjects:action.value}\r\n        default:return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import axios from 'axios';\r\nimport request from 'request-promise';\r\nimport * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, username, role) => {\r\n    console.log(\"in authSuccess\",token,username,role);\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username,\r\n        role: role\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('role');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n        // fetch(uris.LOGIN, {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify(authData)\r\n        // })\r\n        //     .then(res => res.json())\r\n        //     .then(res => {\r\n        //         console.log(\"got \",res);\r\n        //         //const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                // localStorage.setItem('token', res.data.idToken);\r\n                // //localStorage.setItem('expirationDate', expirationDate);\r\n                // localStorage.setItem('id', res.data.user._id);\r\n                // localStorage.setItem('role', res.data.user.role);\r\n                // dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n                // dispatch(checkAuthTimeout(res.data.expiresIn));\r\n                // dispatch(setAuthRedirectPath()); TODO: check and set path\r\n        //     })\r\n        //     .catch(err => {\r\n        //         dispatch(authFail(err));\r\n        // });\r\n        /*axios.post(url, authData)\r\n            .then(res => {\r\n                console.log(res);\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n                dispatch(checkAuthTimeout(res.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.res.data.error));\r\n            });*/\r\n            const options={\r\n                method:'POST',\r\n                uri:uris.LOGIN,\r\n                body:authData,\r\n                json:true\r\n            };\r\n            // console.log(\"requesting\");\r\n            request(options).then((body)=>{\r\n                console.log(body);\r\n                const expirationDate = new Date(new Date().getTime() + body.expires * 1000);\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('username', authData.username);\r\n                localStorage.setItem('role', body.data.user.role);\r\n                dispatch(authSuccess(body.token,authData.username, body.data.user.role));\r\n                dispatch(checkAuthTimeout(body.expires));\r\n            }).catch(err=> {\r\n                console.log(\"errorinside\",err.message);\r\n                dispatch(authFail(authFail(err)));\r\n            });\r\n            \r\n        \r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const username = localStorage.getItem('username');\r\n                const role = localStorage.getItem('role');\r\n                dispatch(authSuccess(token, username, role));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport \"./Login.css\";\r\nimport { Form, FormGroup, Container,Label, Input, Row,Col,Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport LOGO from '../assests/tu logo official.png';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nclass Login extends React.Component{\r\n    // constructor (props){\r\n    //     super (props);\r\n    //     this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    // }\r\n\r\n    onSubmitHandler(event){\r\n        event.preventDefault();\r\n        let username = document.getElementById('username').value;\r\n        let password = document.getElementById('password').value;\r\n        this.props.onSignIn(username, password);\r\n        console.log('gyjgj')\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n            {errorMessage ? errorMessage : (\r\n            <Container fluid >\r\n                <Row>                    \r\n                    {/* <Col xs={12} md={8} lg={6}>\r\n                        <Form className=\"loginBody loginForm\">\r\n                        <img className=\"img\" src=\"http://pcampus.edu.np/wp-content/uploads/2019/05/cropped-pcamus-header-image.jpg\" alt=\"dfdsfdf\"/>\r\n                        \r\n                        <h2 className=\"hd2\">Internal Marks Management</h2>\r\n                        <FormGroup className=\"text-white\">\r\n                        \r\n                        <Label style={{color:\"#9cdcfe\"}}>Username</Label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        placeholder=\"Enter the Username\"\r\n                        //value={ email }\r\n                        //valid={ this.state.validate.emailState === 'has-success' }\r\n                        //invalid={ this.state.validate.emailState === 'has-danger' }\r\n                        // onChange={ (e) => {\r\n                        //  this.validateEmail(e)\r\n                        //   this.handleChange(e)\r\n                        // } }\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                        <Label style={{color:\"#9cdcfe\"}}  for=\"examplePassword\">Password</Label>\r\n                        <Input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter the Password\"\r\n                        \r\n                        //value={ password }\r\n                        // onChange={ (e) => this.handleChange(e) }\r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        <Button className=\"btn btn-dark\" onClick={(event) => this.onSubmitHandler(event)}>Submit</Button>\r\n                        </Form>\r\n                        </Col>\r\n                        <Col>\r\n                        <Col xs={10} sm={8} md={6} lg={4}>\r\n                        <Form className=\"body\" onSubmit={ (e) => this.submitForm(e) }>\r\n                        <img className=\"img\" alt=\"logo\" src={LOGO}/>\r\n                        \r\n                        <h2 className=\"hd2\">Internal Marks Management</h2>\r\n                        <FormGroup className=\"text-white\">\r\n                        \r\n                        <Label>Username</Label>\r\n                        <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"074BCT505\"\r\n                        //value={ email }\r\n                        //valid={ this.state.validate.emailState === 'has-success' }\r\n                        //invalid={ this.state.validate.emailState === 'has-danger' }\r\n                        // onChange={ (e) => {\r\n                        //  this.validateEmail(e)\r\n                        //   this.handleChange(e)\r\n                        // } }\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        \r\n                        <FormGroup>\r\n                        <Label className=\"text-white\" for=\"examplePassword\">Password</Label>\r\n                        <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        //value={ password }\r\n                        onChange={ (e) => this.handleChange(e) }\r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        <Button className=\"text-white\">Submit</Button>\r\n                        </Form>\r\n                    </Col> */}\r\n                    <Col xs={{span:8}} sm={{span:8,offset:1}} md={{span:6,offset:3}} lg={{span:6,offset:3}} xl={{span:4,offset:4}}>\r\n                        <Form className=\"fBody\">\r\n                            <img className=\"img\" alt=\"logo\" src={LOGO}/>\r\n\r\n                            <h2 className=\"hd2\">Internal Marks Management</h2>\r\n                            <FormGroup className=\"text-white\">\r\n\r\n                                <Label>Username</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    placeholder=\"074BCT505\"\r\n                                    //value={ email }\r\n                                    //valid={ this.state.validate.emailState === 'has-success' }\r\n                                    //invalid={ this.state.validate.emailState === 'has-danger' }\r\n                                    // onChange={ (e) => {\r\n                                    //  this.validateEmail(e)\r\n                                    //   this.handleChange(e)\r\n                                    // } }\r\n                                />\r\n\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup>\r\n                                <Label className=\"text-white\" for=\"examplePassword\">Password</Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"********\"\r\n                                    //value={ password }\r\n                                    //onChange={ (e) => this.handleChange(e) }\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <Button className=\"btn btn-dark\" onClick={(event) => this.onSubmitHandler(event)}>Submit</Button>\r\n                        </Form>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            )}\r\n                {authRedirect}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSignIn: (username, password) => dispatch(actions.auth(username, password))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","const baseURI = 'http://5b3bb35c.ngrok.io';\r\nexport const LOGIN = baseURI+'/api/users/login';\r\nexport const ASSIGN_TEACHER = baseURI+'/api/users/assignTeacher';\r\nexport const ADD_TEACHER = baseURI+\"/api/classes/addTeacher\";\r\nexport const FETCH_CLASS_LIST = baseURI+'/api/lecturers/';\r\nexport const FETCH_CLASS_STUDENT_lIST = baseURI+'/api/marks/class/';\r\nexport const POST_MARKS = baseURI+'/api/record/class/';\r\nexport const STUDENT_MARKS = baseURI+'/api/marks/';\r\nexport const FETCH_TEACHER_LIST = baseURI+'/api/users?role=teacher';","import * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const setActiveComponent = (comp) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_COMPONENT,\r\n        value: comp\r\n    }\r\n};\r\n\r\nexport const setTeacherClasses = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_CLASSES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setTeacherClassesStudentList = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setActiveTeacher = (teacher) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER,\r\n        teacher: teacher\r\n    }\r\n};\r\n\r\nexport const setActiveClass = (Class, sem, group) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_CLASS,\r\n        Class: Class,\r\n        sem: sem,\r\n        group: group\r\n    }\r\n};\r\n\r\nexport const setTeachers = (values) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHERS,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setActiveTeacherClassesIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setActiveTeacherClassesStudentListIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const resetAdminState = () => {\r\n    return {\r\n        type: actionTypes.RESET_DEFAULTS_ADMIN\r\n    }\r\n};","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n    <div className='Loader'>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, {Fragment} from 'react';\r\nimport CardTitle from \"reactstrap/es/CardTitle\";\r\nimport Card from \"reactstrap/es/Card\";\r\nimport CardBody from \"reactstrap/es/CardBody\";\r\nimport CardText from \"reactstrap/es/CardText\";\r\nimport \"./AdminMainPage.css\";\r\nimport * as actions from \"../../store/actions/admin\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport {Row, Col, Button} from 'reactstrap';\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass AdminMainPage extends React.Component{\r\n    onCardSelectHandler(data){\r\n        this.props.selectCard(data.username);\r\n        this.props.selectActiveComponent('teacherPage');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                {this.props.loading ? <Spinner/> :\r\n                    <Row xs=\"2\" className=\"styles\">\r\n                        {this.props.teachers.map((data, index) => {\r\n                            return <Col sm={3}  md={4} key={index}>\r\n                                <Card body inverse color=\"dark myCardS\" onClick={() => this.onCardSelectHandler(data)} >\r\n                                    <CardText>Teacher Name: {data.name}</CardText>\r\n                                </Card>\r\n                            </Col>\r\n                        })}\r\n                    </Row>}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        teachers: state.admin.teachers,\r\n        loading: state.admin.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectCard: (data) => dispatch(actions.setActiveTeacher(data)),\r\n        selectActiveComponent: (comp) => dispatch(actions.setActiveComponent(comp))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminMainPage);","import React, {Fragment} from 'react';\r\nimport CardTitle from \"reactstrap/es/CardTitle\";\r\nimport Card from \"reactstrap/es/Card\";\r\nimport CardBody from \"reactstrap/es/CardBody\";\r\nimport CardText from \"reactstrap/es/CardText\";\r\nimport \"./TeacherPage.css\";\r\nimport * as actions from \"../../store/actions/admin\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport {Row, Col, Button} from 'reactstrap';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as uris from \"../../store/uris\";\r\n\r\nclass TeacherPage extends React.Component{\r\n    componentDidMount(){\r\n        console.log(\"In Admin\",this.props);\r\n        let i;\r\n        for(i=0;i<this.props.teacherClasses.length;i++){\r\n            if (this.props.teacherClasses[i].username === this.props.activeTeacher){\r\n                this.props.setActiveTeacherClassesIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.teacherClasses.length){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            // let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_CLASS_LIST+this.props.activeTeacher, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+this.props.token\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('response', res);\r\n                    this.props.setTeacherClasses({username:this.props.activeTeacher, data: res.data});\r\n                    this.props.setActiveTeacherClassesIndex(this.props.teacherClasses.length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    onCardSelectHandler(data){\r\n        this.props.selectCard(data.batch+data.subCode+data.group, data.sem, data.group);\r\n        this.props.selectActiveComponent('studentList');\r\n    }\r\n\r\n    render() {\r\n        /*const classCard = (props) => {\r\n            return (\r\n                <Col sm={3}  md={4}>\r\n                    <Card body inverse color=\"dark myCardS\" >\r\n                        <CardText>Batch: {props.batch}</CardText>\r\n                        <CardText>Subject Code: {props.subCode}</CardText>\r\n                        <CardText>Subject: {props.subName}</CardText>\r\n                        <CardText>Group: {props.group}<Button outline color=\"success\" onClick=\"\" className=\"buttonS\">View</Button></CardText>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        };*/\r\n        let datas = this.props.teacherClasses[this.props.activeTeacherClassesIndex];\r\n        return(\r\n            <Fragment>\r\n                {this.props.loading ? <Spinner/> :\r\n                    <Row className=\"styles\">\r\n                        {datas ?\r\n                            datas.data.map((data, index) => {\r\n                                return <Col  xs={8} sm={8} md={4} lg={3} key={index}>\r\n                                    <Card body inverse color=\"dark myCardS\" onClick={() => this.onCardSelectHandler(data)} >\r\n                                        <CardText>Batch: {data.batch}</CardText>\r\n                                        <CardText>Subject Code: {data.subCode}</CardText>\r\n                                        <CardText>Subject: {data.subName}</CardText>\r\n                                        <CardText>Group: {data.group}</CardText>\r\n                                    </Card>\r\n                                </Col>\r\n                            }) : null}\r\n                    </Row>}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        teacherClasses: state.admin.teacherClasses,\r\n        activeTeacher: state.admin.activeTeacher,\r\n        activeTeacherClassesIndex: state.admin.activeTeacherClassesIndex,\r\n        loading: state.admin.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectCard: (data, sem, group) => dispatch(actions.setActiveClass(data, sem, group)),\r\n        selectActiveComponent: (comp) => dispatch(actions.setActiveComponent(comp)),\r\n        setActiveTeacherClassesIndex: (value) => dispatch(actions.setActiveTeacherClassesIndex(value)),\r\n        setTeacherClasses: (values) => dispatch(actions.setTeacherClasses(values))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherPage);","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Table, CardSubtitle, Row, Col} from 'reactstrap';\r\nimport {Card, CardText, Label, CardBody,CardTitle} from \"reactstrap\";\r\nimport './StudentList.css';\r\nimport Button from \"reactstrap/es/Button\";\r\nimport FormGroup from \"reactstrap/es/FormGroup\";\r\nimport Input from \"reactstrap/es/Input\";\r\nimport Form from \"reactstrap/es/Form\";\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/admin\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nclass StudentList extends React.Component {\r\n    componentDidMount(){\r\n        let i;\r\n        // console.log(\"check\", this.props.teacherClassesStudentList[this.props.classIndex]);\r\n        for(i=0;i<this.props.teacherClassesStudentList[this.props.classIndex].length;i++){\r\n            if ((this.props.teacherClassesStudentList[this.props.classIndex][i].classId === this.props.activeClass) &&\r\n                (this.props.teacherClassesStudentList[this.props.classIndex][i].sem === this.props.activeSem) &&\r\n                (this.props.teacherClassesStudentList[this.props.classIndex][i].group === this.props.activeGroup)){\r\n                this.props.setActiveStudentIndex(i);\r\n                console.log(\"equality hit\");\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.teacherClassesStudentList[this.props.classIndex].length){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            // let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_CLASS_STUDENT_lIST+'073BCESH603CD', { // TODO: change the hardcoded student list fetch\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(\"loaded\");\r\n                    this.props.setStudentValues({classId:this.props.activeClass, sem: this.props.activeSem, group: this.props.activeGroup, data: res.data, fm: res.fm});\r\n                    this.props.setActiveStudentIndex(this.props.teacherClassesStudentList[this.props.classIndex].length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    render() {\r\n        // let recordDatas = this.props.classStudentValues.find((cls) => (this.props.activeClass === cls.classId) && (this.props.activeSem === cls.sem));\r\n        let recordDatas = this.props.teacherClassesStudentList[this.props.classIndex][this.props.studentIndex];\r\n        // if(this.state.studentRecords.length){\r\n        //     recordDatas=this.state.studentRecords.map((record,index)=>(\r\n        //         <tr>\r\n        //             <td>{index+1}</td>\r\n        //             <td>{record.username}</td>\r\n        //             <td>20</td>\r\n        //             <td>8</td>\r\n        //             <td>{record.test}</td>\r\n        //             <td>Excellent</td>\r\n        //          </tr>\r\n        //     ))\r\n        // }\r\n        return(\r\n            <Fragment>\r\n                {this.props.loading ? <Spinner/> :\r\n                    <Card className=\"myCardStyle\">\r\n\r\n                        <div className=\"studentClassTitle\">\r\n                            <CardTitle>Tribhuwan University</CardTitle>\r\n                            <CardSubtitle>IOE, Pulchowk Campus, Lalitpur</CardSubtitle>\r\n                            <CardBody>\r\n                                <CardText>Bachelor's Degree in Computer Engineering</CardText>\r\n\r\n                            </CardBody>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Table className=\"studentListTable text-white\" responsive >\r\n                                <thead className=\"studentTableHead\">\r\n                                <tr>\r\n                                    <th>S.N</th>\r\n                                    <th>Roll No</th>\r\n                                    <th>Full Name</th>\r\n                                    <th>Assessment Marks</th>\r\n                                    <th>Practical Marks</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"scroll\">\r\n                                {recordDatas ?\r\n                                    recordDatas.data.map((data, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index+1}</td>\r\n                                                <td>{data.username}</td>\r\n                                                <td>Full Name</td>\r\n                                                <td>{data.test}</td>\r\n                                                <td>{data.practical}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) : null}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </Card>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        teacherClasses: state.admin.teacherClasses,\r\n        teacherClassesStudentList: state.admin.teacherClassesStudentList,\r\n        classIndex: state.admin.activeTeacherClassesIndex,\r\n        studentIndex: state.admin.activeTeacherClassesStudentListIndex,\r\n        activeClass: state.admin.activeClass,\r\n        activeSem: state.admin.activeSem,\r\n        activeGroup: state.admin.activeGroup,\r\n        loading: state.admin.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setStudentValues: (values) => dispatch(actions.setTeacherClassesStudentList(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveTeacherClassesStudentListIndex(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);","import React,{Component, Fragment} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport AdminMainPage from \"./AdminMainPage\";\r\nimport TeacherPage from './TeacherPage';\r\nimport StudentList from './StudentList';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/admin\";\r\nclass Admin extends Component {\r\n    componentDidMount(){\r\n        this.props.resetAdminState();\r\n        fetch(uris.FETCH_TEACHER_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.props.onSetTeacher(res.data.users))\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n    }\r\n\r\n    render() {\r\n        let renderComp = null;\r\n        switch (this.props.activeComponent) {\r\n            case 'mainPage':\r\n                renderComp = <AdminMainPage/>;\r\n                break;\r\n            case 'teacherPage':\r\n                renderComp = <TeacherPage/>;\r\n                break;\r\n            case 'studentList':\r\n                renderComp = <StudentList/>;\r\n                break;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {renderComp}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n        activeComponent: state.admin.activeComponent,\r\n        teachers: state.admin.teachers\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetTeacher: (values) => dispatch(actions.setTeachers(values)),\r\n        resetAdminState: () => dispatch(actions.resetAdminState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const setActiveComponent = (comp) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_COMPONENT,\r\n        value: comp\r\n    }\r\n};\r\n\r\nexport const setActiveClass = (Class, sem, group) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS,\r\n        Class: Class,\r\n        sem: sem,\r\n        group: group\r\n    }\r\n};\r\n\r\nexport const setActiveStudentIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const updateClassStudentValues = (value, Type, index) => {\r\n    return {\r\n        type: actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value,\r\n        Type: Type,\r\n        index: index\r\n    }\r\n};\r\n\r\nexport const resetTeacherState = () => {\r\n    return {\r\n        type: actionTypes.RESET_DEFAULTS_TEACHER\r\n    }\r\n};\r\n\r\nexport const setClasses = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASSES,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const submitMarks = (data) => {\r\n    return dispatch => {\r\n        fetch(uris.POST_MARKS,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.status === 'success'){\r\n                    alert(\"Successfull Submitted Marks!!\")\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n};","import React  from 'react';\r\nimport {Navbar, NavbarBrand,NavbarText, Button} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport './NavBar.css'\r\nimport tuLogo from \"../../assests/tu logo official.png\";\r\nimport * as actions from \"../../store/actions/auth\";\r\nimport {resetAdminState} from \"../../store/actions/admin\";\r\nimport {resetTeacherState} from \"../../store/actions/teacher\";\r\nclass Navbars extends React.Component{\r\n    onLogOutHandler(event){\r\n        event.preventDefault();\r\n        this.props.resetTeacherState();\r\n        this.props.resetAdminState();\r\n        this.props.onLogOut();\r\n    }\r\n    render()\r\n    {\r\n            return (\r\n                <div>\r\n                    <Navbar className=\"myNavBar\">\r\n                        <NavbarBrand className=\"text-white\" href=\"/\">\r\n                            <img width=\"40vh\" height=\"50vh\" src={tuLogo} alt=\".\" /> Internal Marks Management System\r\n                            </NavbarBrand>\r\n                            <NavbarText className=\"text-white\">\r\n                                <Button className=\"btn btn-dark myButton\" onClick={(event) => this.onLogOutHandler(event)}>Log Out <i className=\"fa fa-sign-out text-danger\"> </i></Button>\r\n                                {/*<a className=\"text-white\" onClick={(event) => this.onLogutHandler(event)}><h6>Logout <i className=\"fa fa-sign-out text-danger\"> </i></h6></a>*/}\r\n                            </NavbarText>\r\n                    </Navbar>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resetTeacherState: () => dispatch(resetTeacherState()),\r\n        resetAdminState: () => dispatch(resetAdminState()),\r\n        onLogOut: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Navbars);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Table, CardSubtitle, Row, Col} from 'reactstrap';\r\nimport {Card, CardText, Label, CardBody,CardTitle} from \"reactstrap\";\r\n//import './StudentList.css';\r\nimport Button from \"reactstrap/es/Button\";\r\nimport FormGroup from \"reactstrap/es/FormGroup\";\r\nimport Input from \"reactstrap/es/Input\";\r\nimport Form from \"reactstrap/es/Form\";\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/teacher\";\r\nclass StudentList extends React.Component {\r\n    componentDidMount(){\r\n        console.log(\"In Teacher\",this.props); // TODO: change the url to uris.js\r\n        let i;\r\n        for(i=0;i<this.props.classStudentValues.length;i++){\r\n            if ((this.props.classStudentValues[i].classId === this.props.activeClass) && (this.props.classStudentValues[i].sem === this.props.activeSem)){\r\n                this.props.setActiveStudentIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.classStudentValues.length){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_CLASS_STUDENT_lIST+'073BCESH603CD', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.props.setClassStudentValues({classId:this.props.activeClass, sem: this.props.activeSem, data: res.data, fm: res.fm});\r\n                    this.props.setActiveStudentIndex(this.props.classStudentValues.length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    render() {\r\n        // let recordDatas = this.props.classStudentValues.find((cls) => (this.props.activeClass === cls.classId) && (this.props.activeSem === cls.sem));\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        // if(this.state.studentRecords.length){\r\n        //     recordDatas=this.state.studentRecords.map((record,index)=>(\r\n        //         <tr>\r\n        //             <td>{index+1}</td>\r\n        //             <td>{record.username}</td>\r\n        //             <td>20</td>\r\n        //             <td>8</td>\r\n        //             <td>{record.test}</td>\r\n        //             <td>Excellent</td>\r\n        //          </tr>\r\n        //     ))\r\n        // }\r\n        return(\r\n\r\n            <Card className=\"myCardStyle\">\r\n\r\n                    <div className=\"studentClassTitle\">\r\n                        <CardTitle>Tribhuwan University</CardTitle>\r\n                        <CardSubtitle>IOE, Pulchowk Campus, Lalitpur</CardSubtitle>\r\n                        <CardBody>\r\n                        <CardText>Bachelor's Degree in Computer Engineering</CardText>\r\n\r\n                        </CardBody>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Table className=\"studentListTable text-white\" responsive >\r\n                            <thead className=\"studentTableHead\">\r\n                            <tr>\r\n                                <th>S.N</th>\r\n                                <th>Roll No</th>\r\n                                <th>Full Name</th>\r\n                                <th>Assessment Marks</th>\r\n                                <th>Practical Marks</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody className=\"scroll\">\r\n                            {recordDatas ?\r\n                                recordDatas.data.map((data, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{index+1}</td>\r\n                                            <td>{data.username}</td>\r\n                                            <td>Full Name</td>\r\n                                            <td>{data.test}</td>\r\n                                            <td>{data.practical}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }) : null}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        classes: state.teacher.classes,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        activeClass: state.teacher.activeClass,\r\n        activeSem: state.teacher.activeSem\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveStudentIndex(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);","import React, {Fragment} from 'react';\r\nimport { Table} from 'reactstrap';\r\nimport Input from \"reactstrap/es/Input\";\r\nimport Button from \"reactstrap/es/Button\";\r\nimport Form from \"reactstrap/es/Form\";\r\nimport {Col, Row} from 'reactstrap';\r\nimport './MarksEntry.css'\r\nimport tu from \"../../assests/tu logo official.png\"\r\nimport * as actions from \"../../store/actions/teacher\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass MarksEntry extends React.Component {\r\n    \r\n    onMarksChangeHandler(event, type, index, fm){\r\n        let theNumber=event.target.value*1;\r\n        if (!theNumber)\r\n        {\r\n            this.props.updateClassStudentValues(0,type,index);\r\n        }\r\n        else {\r\n            console.log(\"ndfsd\",theNumber, fm, type);\r\n            if (type === 'asmnt'){\r\n                if (theNumber >= 0 && theNumber <= fm.asmnt){\r\n                    document.getElementById('i1').value = '';\r\n                    this.props.updateClassStudentValues(theNumber, type, index);\r\n                }\r\n            }else if(type === 'pract'){\r\n                if (theNumber >= 0 && theNumber <= fm.pract){\r\n                    document.getElementById('i2').value = '';\r\n                    this.props.updateClassStudentValues(theNumber, type, index);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onMarksSubmitHandler(event){\r\n        event.preventDefault();\r\n        let tempData = {...this.props.classStudentValues[this.props.classIndex]};\r\n        tempData.sem = (parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2]);\r\n        let temo = {classId:tempData.classId, sem:tempData.sem, datas: tempData.data};\r\n        this.props.submitMarks(tempData);\r\n        console.log(tempData)\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        return(\r\n               <Fragment>\r\n                   {this.props.loading ? <Spinner/> :\r\n                       <div className=\"myCardStyle\">\r\n                           <Form className=\"myForm\">;\r\n\r\n                               <Row>\r\n                                   <Col className=\"text-center\">\r\n                                       <h4 className=\"text-white\">IOE is Greater than TU</h4>\r\n                                       <img width=\"90vh\" height=\"100vh\" src={tu} alt=\"tulogo\"/>\r\n                                   </Col>\r\n                               </Row>\r\n                           </Form>\r\n\r\n                           <Table className=\"myTable\"  >\r\n                               <thead>\r\n                               <tr className=\"text-white\">\r\n                                   <th>S.N</th>\r\n                                   <th>Roll No</th>\r\n                                   <th>Full Name</th>\r\n                                   <th>Assessment Marks</th>\r\n                                   <th>Practical Marks</th>\r\n                                   <th>Remarks</th>\r\n                               </tr>\r\n                               </thead>\r\n                               <tbody>\r\n                               {\r\n                                   recordDatas.data.map((data,index) => {\r\n                                       return <tr className=\"text-white\" key={index}>\r\n                                           <td className=\"text-center\">{index+1}</td>\r\n                                           <td>{data.username}</td>\r\n                                           <td>Full Name</td>\r\n                                           <td><Input type='number' id='i1' onChange={(event) => this.onMarksChangeHandler(event,'asmnt', index, recordDatas.fm)} value={data.test}/></td>\r\n                                           <td><Input type='number' id='i2' onChange={(event) => this.onMarksChangeHandler(event,'pract', index, recordDatas.fm)} value={data.practical}/></td>\r\n                                           <td>Excellent</td>\r\n                                       </tr>\r\n                                   })\r\n                               }\r\n                               <tr>\r\n                                   <td colSpan=\"5\" className=\"text-right\">Action</td>\r\n                                   <td><Button onClick={(event) => this.onMarksSubmitHandler(event)} outline className=\"text-white\" color=\"success\">Submit</Button></td>\r\n                               </tr>\r\n                               </tbody>\r\n\r\n                           </Table>\r\n                       </div>}\r\n               </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        classes: state.teacher.classes,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        activeClass: state.teacher.activeClass,\r\n        activeSem: state.teacher.activeSem,\r\n        loading: state.teacher.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        updateClassStudentValues: (value, type, index) => dispatch(actions.updateClassStudentValues(value, type, index)),\r\n        submitMarks: (data) => dispatch(actions.submitMarks(data))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarksEntry);","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Table, CardSubtitle, Row, Col} from 'reactstrap';\r\nimport {Card, CardText, Label, CardBody,CardTitle} from \"reactstrap\";\r\nimport './StudentList.css';\r\nimport Button from \"reactstrap/es/Button\";\r\nimport FormGroup from \"reactstrap/es/FormGroup\";\r\nimport Input from \"reactstrap/es/Input\";\r\nimport Form from \"reactstrap/es/Form\";\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/teacher\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nclass StudentList extends React.Component {\r\n    componentDidMount(){\r\n        console.log(\"In Teacher\",this.props);\r\n        let i;\r\n        for(i=0;i<this.props.classStudentValues.length;i++){\r\n            if ((this.props.classStudentValues[i].classId === this.props.activeClass) &&\r\n                (this.props.classStudentValues[i].sem === this.props.activeSem) &&\r\n                (this.props.classStudentValues[i].group === this.props.activeGroup)){\r\n                this.props.setActiveStudentIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.classStudentValues.length){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            // let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_CLASS_STUDENT_lIST+'073BCESH603CD', { // TODO: change the hardcoded student list fetch\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.props.setClassStudentValues({classId:this.props.activeClass, sem: this.props.activeSem, group: this.props.activeGroup, data: res.data, fm: res.fm});\r\n                    this.props.setActiveStudentIndex(this.props.classStudentValues.length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    render() {\r\n        // let recordDatas = this.props.classStudentValues.find((cls) => (this.props.activeClass === cls.classId) && (this.props.activeSem === cls.sem));\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        // if(this.state.studentRecords.length){\r\n        //     recordDatas=this.state.studentRecords.map((record,index)=>(\r\n        //         <tr>\r\n        //             <td>{index+1}</td>\r\n        //             <td>{record.username}</td>\r\n        //             <td>20</td>\r\n        //             <td>8</td>\r\n        //             <td>{record.test}</td>\r\n        //             <td>Excellent</td>\r\n        //          </tr>\r\n        //     ))\r\n        // }\r\n        return(\r\n            <Fragment>\r\n                {this.props.loading ? <Spinner/> :\r\n                    <Card className=\"myCardStyle\">\r\n                        <div className=\"studentClassTitle\">\r\n                            <CardTitle>Tribhuwan University</CardTitle>\r\n                            <CardSubtitle>IOE, Pulchowk Campus, Lalitpur</CardSubtitle>\r\n                            <CardBody>\r\n                                <CardText>Bachelor's Degree in Computer Engineering</CardText>\r\n\r\n                            </CardBody>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Table className=\"studentListTable text-white\" responsive >\r\n                                <thead className=\"studentTableHead\">\r\n                                <tr>\r\n                                    <th>S.N</th>\r\n                                    <th>Roll No</th>\r\n                                    <th>Full Name</th>\r\n                                    <th>Assessment Marks</th>\r\n                                    <th>Practical Marks</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"scroll\">\r\n                                {recordDatas ?\r\n                                    recordDatas.data.map((data, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index+1}</td>\r\n                                                <td>{data.username}</td>\r\n                                                <td>Full Name</td>\r\n                                                <td>{data.test}</td>\r\n                                                <td>{data.practical}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) : null}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </Card>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        classes: state.teacher.classes,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        activeClass: state.teacher.activeClass,\r\n        activeSem: state.teacher.activeSem,\r\n        activeGroup: state.teacher.activeGroup,\r\n        loading: state.teacher.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveStudentIndex(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);","import { Navbar} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport NavbarBrand from \"reactstrap/es/NavbarBrand\";\r\nimport './SideBar.css'\r\nimport {UncontrolledTooltip} from 'reactstrap';\r\n\r\nexport class SidebarUI extends React.Component{\r\n    render()\r\n    {\r\n        return (\r\n                <Navbar  className=\"myNav flex-column\" >\r\n\r\n                            <NavbarBrand className=\"myNavBrand text-success\" href=\"/components/\">\r\n                                <UncontrolledTooltip placement=\"right\" target=\"admin\">\r\n                                    Admin Panel\r\n                                </UncontrolledTooltip>\r\n                                <i className=\"fa fa-address-card-o text-center\" id=\"admin\">   </i>\r\n\r\n                            </NavbarBrand>\r\n\r\n                            <NavbarBrand className=\"myNavBrand text-success\" href=\"/components/\">\r\n                                <UncontrolledTooltip placement=\"right\" target=\"teacher\">\r\n                                    Teacher Dashboard\r\n                                </UncontrolledTooltip>\r\n                                <i className=\"fa fa-television text-center\" id=\"teacher\"></i>\r\n                            </NavbarBrand>\r\n                            <NavbarBrand className=\"myNavBrand text-success\" href=\"/components/\">\r\n                                <UncontrolledTooltip placement=\"right\" target=\"new\">\r\n                                    Add Teacher/Student Account\r\n                                </UncontrolledTooltip>\r\n                                <i  className=\"fa fa-plus text-center\" id=\"new\"></i>\r\n                            </NavbarBrand>\r\n                            <NavbarBrand className=\"myNavBrand text-success\" href=\"/components/\">\r\n                                <UncontrolledTooltip placement=\"right\" target=\"marksentry\">\r\n                                    Marks Entry\r\n                                </UncontrolledTooltip>\r\n                                <i  className=\"fa fa-pencil-square-o text-center\" id=\"marksentry\" ></i>\r\n                            </NavbarBrand>\r\n                            <NavbarBrand className=\"myNavBrand text-success\" href=\"/components/\">\r\n                                <UncontrolledTooltip placement=\"right\" target=\"studentv\">\r\n                                    Student View\r\n                                </UncontrolledTooltip>\r\n                                <i  className=\"fa fa-television text-center\" id=\"studentv\"></i>\r\n                        </NavbarBrand>\r\n\r\n                </Navbar>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport CardTitle from \"reactstrap/es/CardTitle\";\r\nimport Card from \"reactstrap/es/Card\";\r\nimport CardBody from \"reactstrap/es/CardBody\";\r\nimport CardText from \"reactstrap/es/CardText\";\r\nimport \"./TeacherMainPage.css\";\r\nimport * as actions from \"../../store/actions/teacher\";\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport {Row, Col, Button} from 'reactstrap';\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass TeacherMainPage extends React.Component{\r\n    onCardSelectHandler(data){\r\n        this.props.selectCard(data.batch+data.subCode+data.group, data.sem, data.group);\r\n        this.props.selectActiveComponent('studentList');\r\n    }\r\n\r\n    render() {\r\n        /*const classCard = (props) => {\r\n            return (\r\n                <Col sm={3}  md={4}>\r\n                    <Card body inverse color=\"dark myCardS\" >\r\n                        <CardText>Batch: {props.batch}</CardText>\r\n                        <CardText>Subject Code: {props.subCode}</CardText>\r\n                        <CardText>Subject: {props.subName}</CardText>\r\n                        <CardText>Group: {props.group}<Button outline color=\"success\" onClick=\"\" className=\"buttonS\">View</Button></CardText>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        };*/\r\n        return(\r\n            <Fragment>\r\n                {this.props.loading ? <Spinner/> :\r\n                    <Row className=\"styles\">\r\n                        {this.props.classes.map((data, index) => {\r\n                            return <Col  xs={8} sm={8} md={4} lg={3} key={index}>\r\n                                <Card body inverse color=\"dark myCardS\" onClick={() => this.onCardSelectHandler(data)} >\r\n                                    <CardText>Batch: {data.batch}</CardText>\r\n                                    <CardText>Subject Code: {data.subCode}</CardText>\r\n                                    <CardText>Subject: {data.subName}</CardText>\r\n                                    <CardText>Group: {data.group}</CardText>\r\n                                </Card>\r\n                            </Col>\r\n                        })}\r\n                    </Row>}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        classes: state.teacher.classes,\r\n        loading: state.teacher.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectCard: (data, sem, group) => dispatch(actions.setActiveClass(data, sem, group)),\r\n        selectActiveComponent: (comp) => dispatch(actions.setActiveComponent(comp))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherMainPage);","import React,{Component, Fragment} from \"react\";\r\nimport {Container} from \"reactstrap\";\r\nimport Col from \"reactstrap/es/Col\";\r\nimport {SidebarUI} from \"../../components/Slidebar/SidebarUI\";\r\nimport Row from \"reactstrap/es/Row\";\r\n//import {StudentList} from \"./StudentList\";\r\nimport {Navbars} from \"../../components/NavBar/Navbars\";\r\nimport { connect } from 'react-redux';\r\nimport MarksEntry from \"./MarksEntry\";\r\nimport StudentList from \"./StudentList\";\r\n// import {TeacherV} from \"./TeacherV\";\r\nimport TeacherMainPage from \"./TeacherMainPage\";\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/teacher\";\r\n// import {AdminV} from \"../../../Pages/AdminDashBoard/AdminV\";\r\nclass Teacher extends Component {\r\n    componentDidMount(){\r\n        this.props.resetTeacherState();\r\n        fetch(uris.FETCH_CLASS_LIST+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.props.onSetClass(res.data))\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n    }\r\n\r\n    render() {\r\n        let renderComp = null;\r\n        switch (this.props.activeComponent) {\r\n            case 'mainPage':\r\n                renderComp = <TeacherMainPage/>;\r\n                break;\r\n            case 'marksEntry':\r\n                renderComp = <MarksEntry/>;\r\n                break;\r\n            case 'studentList':\r\n                renderComp = <StudentList/>;\r\n                break;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {renderComp}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n        activeComponent: state.teacher.activeComponent,\r\n        classes: state.teacher.classes\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetClass: (values) => dispatch(actions.setClasses(values)),\r\n        resetTeacherState: () => dispatch(actions.resetTeacherState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teacher);\r\n","import * as actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport const setCurrentSem=(sem)=>{\r\n    console.log(\"In sem action:\",sem);\r\n    return {\r\n        type:actionTypes.SET_STUDENT_CURRENT_SEM,\r\n        value:sem\r\n    }\r\n}\r\n\r\nexport const setStudentMarks=(marks)=>{\r\n    console.log(\"in action\",marks);\r\n    return {\r\n        type:actionTypes.SET_STUDENT_MARKS,\r\n        value:marks\r\n    }\r\n}\r\n\r\nexport const setActivePage=(page)=>{\r\n    console.log(\"in componentt action:\",page);\r\n    return {\r\n        type:actionTypes.SET_ACTIVE_PAGE,\r\n        value:page\r\n    }\r\n}\r\n\r\nexport const setSubjects=(subjects)=>{\r\n    console.log(\"in subject action\",subjects);\r\n    return {\r\n        type:actionTypes.SET_SUBJECTS,\r\n        value:subjects\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Table, CardSubtitle, Row, Col} from 'reactstrap';\r\nimport {Card, CardText, Label, CardBody,CardTitle} from \"reactstrap\";\r\n\r\n//import './MarksDisplay.css';\r\nimport Button from \"reactstrap/es/Button\";\r\nimport FormGroup from \"reactstrap/es/FormGroup\";\r\nimport Input from \"reactstrap/es/Input\";\r\nimport Form from \"reactstrap/es/Form\";\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/student\";\r\nclass MarksDisplay extends React.Component {\r\n    componentDidMount(){\r\n        \r\n    }\r\n    \r\n    render() {\r\n        let recordDatas=[1,2,3,4];\r\n        return(\r\n\r\n            <Card className=\"myCardStyle\">\r\n\r\n                    <div className=\"studentClassTitle\">\r\n                        <CardTitle>Tribhuwan University</CardTitle>\r\n                        <CardSubtitle>IOE, Pulchowk Campus, Lalitpur</CardSubtitle>\r\n                        <CardBody>\r\n                        <CardText>Bachelor's Degree in Computer Engineering</CardText>\r\n\r\n                        </CardBody>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Table className=\"studentListTable text-white\" responsive >\r\n                            <thead className=\"studentTableHead\">\r\n                            <tr>\r\n                                <th>S.N</th>\r\n                                <th>Subject</th>\r\n                                <th>Assessment Marks</th>\r\n                                <th>Practical Marks</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody className=\"scroll\">\r\n                            {this.props.marks ?\r\n                                this.props.marks[this.props.activeSem].map((data, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{index+1}</td>\r\n                                            <td>{data.code}</td>\r\n                                            <td>{data.m1}</td>\r\n                                            <td>{data.m2}</td>                                           \r\n                                        </tr>\r\n                                    )\r\n                                }) : null}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSem:state.student.activeSem,\r\n        marks:state.student.marks\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        \r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarksDisplay);","import React from 'react';\r\nimport CardTitle from \"reactstrap/es/CardTitle\";\r\nimport Card from \"reactstrap/es/Card\";\r\nimport CardBody from \"reactstrap/es/CardBody\";\r\nimport CardText from \"reactstrap/es/CardText\";\r\nimport \"./StudentMainPage.css\";\r\nimport * as actions from \"../../store/actions/student\";\r\nimport {Row, Col, Button} from 'reactstrap';\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass StudentMainPage extends React.Component{\r\n    onCardSelectHandler(data){\r\n        // this.props.selectCard(data.batch+data.subCode+data.group, data.sem);\r\n        // this.props.selectActiveComponent('studentList');\r\n    }\r\n\r\n    render() {\r\n        /*const classCard = (props) => {\r\n            return (\r\n                <Col sm={3}  md={4}>\r\n                    <Card body inverse color=\"dark myCardS\" >\r\n                        <CardText>Batch: {props.batch}</CardText>\r\n                        <CardText>Subject Code: {props.subCode}</CardText>\r\n                        <CardText>Subject: {props.subName}</CardText>\r\n                        <CardText>Group: {props.group}<Button outline color=\"success\" onClick=\"\" className=\"buttonS\">View</Button></CardText>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        };*/\r\n        let semesters=[1,2,3,4,5,6,7,8];\r\n        return(\r\n            <Row  className=\"styles\">\r\n                {semesters.map((data, index) => {\r\n                    return <Col xs={8}sm={7}  md={4} lg={3} xl={3} key={index}>\r\n                        <Card body inverse color=\"dark myCardS\" onClick={() => {\r\n                            this.props.setCurrentSem('s3');\r\n                            this.props.setActivePage('marksDisplay')}} >\r\n                            <CardText>Semester: {data}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username:state.auth.username,\r\n        marks:state.student.marks,\r\n        activeComponent:state.student.activeComponent\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentSem:(sem)=>dispatch(actions.setCurrentSem(sem)),\r\n        setActivePage:(page)=>dispatch(actions.setActivePage(page))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentMainPage);","import React,{Component, Fragment} from \"react\";\r\nimport {Container} from \"reactstrap\";\r\nimport Col from \"reactstrap/es/Col\";\r\nimport {SidebarUI} from \"../../components/Slidebar/SidebarUI\";\r\nimport Row from \"reactstrap/es/Row\";\r\n//import {StudentList} from \"./StudentList\";\r\nimport {Navbars} from \"../../components/NavBar/Navbars\";\r\nimport { connect } from 'react-redux';\r\nimport MarksDisplay from \"./MarksDisplay\";\r\n// import {TeacherV} from \"./TeacherV\";\r\nimport StudentMainPage from \"./StudentMainPage\";\r\n//import MarksDisplay from \"./MarksDisplay\"\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from \"../../store/actions/student\";\r\n// import {AdminV} from \"../../../Pages/AdminDashBoard/AdminV\";\r\nclass Student extends Component {\r\n    componentDidMount(){\r\n        fetch(uris.STUDENT_MARKS+this.props.username+\"?fields=s1,s2,s3,s4,s5,s6,s7,s8\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(\"Here data:\",res.data);\r\n                this.props.onFetched(res.data)})\r\n            .catch(err => console.log(\"Student err\", err))\r\n    }\r\n\r\n    render() {\r\n        let renderComp = null;\r\n        switch (this.props.activeComponent) {\r\n            case 'mainPage':\r\n                renderComp = <StudentMainPage/>;\r\n                break;\r\n            case 'marksDisplay':\r\n                renderComp = <MarksDisplay/>;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {renderComp}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n        activeComponent:state.student.activeComponent,\r\n        loading:state.student.loading,\r\n        activeSem:state.student.activeSem,\r\n        marks:state.student.marks,\r\n        subjects:state.student.subjects\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetSem: (sem) => dispatch(actions.setCurrentSem(sem)),\r\n        onFetched:(marks,subjects)=>{\r\n            dispatch(actions.setStudentMarks(marks));\r\n            dispatch(actions.setSubjects(subjects))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);\r\n","import { Navbar} from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport React, {Fragment} from \"react\";\r\nimport NavbarBrand from \"reactstrap/es/NavbarBrand\";\r\nimport './SideBar.css'\r\nimport {UncontrolledTooltip} from 'reactstrap';\r\nimport * as action from '../../store/actions/teacher';\r\n\r\nclass SidebarTeacher extends React.Component{\r\n    onComponentShiftHandler(prop){\r\n        this.props.setActiveComponent(prop);\r\n    }\r\n    render(){\r\n        let conditionRender = null;\r\n        if (this.props.activeClass){\r\n            conditionRender = (\r\n                <Fragment>\r\n                <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('studentList')}>\r\n                    <UncontrolledTooltip placement=\"right\" target=\"marksview\">\r\n                    Marks View\r\n                    </UncontrolledTooltip>\r\n                    <i  className=\"fa fa-television text-center\" id=\"marksview\"></i>\r\n                </NavbarBrand>\r\n                <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('marksEntry')}>\r\n                    <UncontrolledTooltip placement=\"right\" target=\"marksentry\">\r\n                        Marks Entry\r\n                    </UncontrolledTooltip>\r\n                    <i  className=\"fa fa-pencil-square-o text-center\" id=\"marksentry\" ></i>\r\n                </NavbarBrand>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n                <Navbar  className=\"myNav flex-column\" >\r\n                            <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('mainPage')}>\r\n                                <UncontrolledTooltip placement=\"right\" target=\"teacher\">\r\n                                    Teacher Dashboard\r\n                                </UncontrolledTooltip>\r\n                                <i className=\"fa fa-television text-center\" id=\"teacher\"></i>\r\n                            </NavbarBrand>\r\n                            {conditionRender}\r\n\r\n                </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeComponent: state.teacher.activeComponent,\r\n        activeClass: state.teacher.activeClass,\r\n        classes: state.teacher.classes\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        setActiveComponent: (value) => dispatch(action.setActiveComponent(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(SidebarTeacher);","import { Navbar} from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport React, {Fragment} from \"react\";\r\nimport NavbarBrand from \"reactstrap/es/NavbarBrand\";\r\nimport './SideBar.css'\r\nimport {UncontrolledTooltip} from 'reactstrap';\r\nimport * as action from '../../store/actions/admin';\r\n\r\nclass SidebarAdmin extends React.Component{\r\n    onComponentShiftHandler(prop){\r\n        this.props.setActiveComponent(prop);\r\n    }\r\n    render()\r\n    {\r\n        let classOption, teacherOption = null;\r\n        if (this.props.activeTeacher) {\r\n            teacherOption = ( // TODO: set appropriate sidebar icons\r\n                <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('teacherPage')}>\r\n                    <UncontrolledTooltip placement=\"right\" target=\"teacher\">\r\n                        Teacher\r\n                    </UncontrolledTooltip>\r\n                    <i  className=\"fa fa-pencil-square-o text-center\" id=\"teacher\" ></i>\r\n                </NavbarBrand>\r\n            )\r\n        }\r\n        if (this.props.activeClass) {\r\n            classOption = (\r\n                <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('studentList')}>\r\n                    <UncontrolledTooltip placement=\"right\" target=\"class\">\r\n                        Class\r\n                    </UncontrolledTooltip>\r\n                    <i  className=\"fa fa-pencil-square-o text-center\" id=\"class\" ></i>\r\n                </NavbarBrand>\r\n            )\r\n        }\r\n        return (\r\n            <Navbar  className=\"myNav flex-column\" >\r\n\r\n                <NavbarBrand className=\"myNavBrand text-success\" onClick={() => this.onComponentShiftHandler('mainPage')}>\r\n                    <UncontrolledTooltip placement=\"right\" target=\"mainPage\">\r\n                        Admin Panel\r\n                    </UncontrolledTooltip>\r\n                    <i className=\"fa fa-address-card-o text-center\" id=\"mainPage\">   </i>\r\n                </NavbarBrand>\r\n                {teacherOption}\r\n                {classOption}\r\n\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeComponent: state.admin.activeComponent,\r\n        activeTeacher: state.admin.activeTeacher,\r\n        activeClass: state.admin.activeClass\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        setActiveComponent: (value) => dispatch(action.setActiveComponent(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(SidebarAdmin);","import React, { Component, Fragment } from 'react';\r\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\r\nimport {Container,Row,Col} from 'reactstrap';\r\n//import {StudentList} from \"./pages/Teacher/StudentList\";\r\n// import SignIn from './pages/SignIn';\r\nimport LogIn from '../src/NewUI/pages/Login';\r\nimport Admin from '../src/NewUI/pages/Admin/Admin';\r\nimport Navbars from './NewUI/components/NavBar/Navbars'\r\n//import {NavBars} from './NewUI/components/NavBar/Navbars.js'\r\nimport {StudentList} from './NewUI/pages/Student/StudentList';\r\nimport {MarksEntry} from './NewUI/pages/Teacher/MarksEntry';\r\nimport Teacher from './NewUI/pages/Teacher/Teacher';\r\nimport Student from './NewUI/pages/Student/Student';\r\n//import Student from './pages/Student';\r\nimport SidebarTeacher from \"./NewUI/components/Slidebar/SidebarTeacher\";\r\nimport SidebarAdmin from \"./NewUI/components/Slidebar/SidebarAdmin\";\r\n// import {SSidebar} from \"./NewUI/components/Slidebar/SSidebar\";\r\n// import {ASidebar} from \"./NewUI/components/Slidebar/ASidebar\";\r\n\r\n//import {MarksEntry} from './pages/Teacher/MarksEntry';\r\nimport * as actions from '../src/NewUI/store/actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount(){\r\n        this.props.onTryAutoSignup();\r\n        console.log(\"in main page\",this.props);\r\n    }\r\n    \r\n    render(){\r\n        let routes =null;\r\n        let Switches=null;\r\n        let Sidebar=null;\r\n        if (!this.props.isAuthenticated){\r\n            routes=(\r\n                <Switch>\r\n                    <Route path=\"/\" component={LogIn}/>\r\n                </Switch>)\r\n        }\r\n        else {\r\n            if(this.props.isAuthenticated && this.props.role===\"admin\"){\r\n                Switches = (\r\n                    <Switch>\r\n                        <Route path=\"/\" component={Admin}/>\r\n                    </Switch>);\r\n                Sidebar = <SidebarAdmin/>\r\n            }\r\n            else if(this.props.isAuthenticated && this.props.role===\"teacher\"){\r\n                Switches = (\r\n                    <Switch>\r\n                        {/* <Route path=\"/\" component={StudentListM}/> */}\r\n                        <Route path=\"/\" component={Teacher}/>\r\n                    </Switch>);\r\n                Sidebar = <SidebarTeacher/>\r\n            }\r\n            else if(this.props.isAuthenticated && this.props.role===\"student\"){\r\n                Switches = (\r\n                    <Switch>\r\n                        {/* <Route path=\"/\" component={StudentListM}/> */}\r\n                        <Route path=\"/\" component={Student}/>\r\n                    </Switch>);\r\n                Sidebar = <SidebarTeacher/>\r\n            }\r\n\r\n            routes=(\r\n                <Container fluid={true}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Navbars/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={1}>\r\n                            {Sidebar}\r\n                        </Col>\r\n                        <Col xs={11}>\r\n                            {Switches}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                { routes }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        role: state.auth.role,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n    };\r\n};\r\n\r\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './NewUI/store/reducers/auth.js';\r\nimport teacherReducer from './NewUI/store/reducers/teacher.js'\r\nimport adminReducer from './NewUI/store/reducers/admin';\r\nimport studentReducer from './NewUI/store/reducers/student.js';\r\nimport { Provider } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    teacher: teacherReducer,\r\n    student:studentReducer,\r\n    admin: adminReducer\r\n});\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/tu logo official.af4df160.png\";"],"sourceRoot":""}